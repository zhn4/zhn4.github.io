{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1472787745606},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1472787745606},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1472787745606},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1472787745606},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1472787745606},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1472787745606},{"_id":"source/_posts/FileReader使用.md","hash":"0ddebfd44793ebe5cb1a9f2ae8639504f39b3ead","modified":1472787983918},{"_id":"source/_posts/Ubuntu下安装使用Shadowsocks.md","hash":"942039c0a00cbf1342d7a96a0b7b799875740d7b","modified":1472787983918},{"_id":"source/_posts/ajax上传图片.md","hash":"30b60a7431fd543d400b486dd18aca1c8baa90ca","modified":1472787983918},{"_id":"source/_posts/git-rebase-使用.md","hash":"02ba590587c09995979cb0a2eb208e9f5c6b9905","modified":1472787983918},{"_id":"source/_posts/gulp使用.md","hash":"bcfc2c690a65fb8ed556eaec0b6e688eec8a25a1","modified":1472787983918},{"_id":"source/_posts/hexo使用.md","hash":"b5b67dad6914e71f16e6981dfc790135f7178455","modified":1472787983918},{"_id":"source/_posts/localStorage使用.md","hash":"4595d19182e2223b3b0e710387ff3519acbd0852","modified":1472787983918},{"_id":"source/_posts/sass常用模块.md","hash":"39b028681e9b0a038da237a59de31ccd5444335a","modified":1472787983918},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1472787745606},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1472787745606},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1472787745606},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1472787745606},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1472787745606},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1472787745606},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1472787745606},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1472787745606},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1472787745606},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1472787745606},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1472787745606},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1472787745606},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1472787745606},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1472787745606},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1472787745606},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1472787745606},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1472787745606},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1472787745606},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1472787745606},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1472787745606},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1472787745606},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1472787745610},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1472787745618},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1472787745618},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1472787745622},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1472787745622},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1472787745606},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1472787745606},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1472787745606},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1472787745606},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1472787745610},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1472787745610},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1472787745610},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1472787745610},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1472787745610},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1472787745610},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1472787745618},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1472787745622},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1472787745622},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1472787745618},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1472787745614},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1472787745618}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"FileReader使用","date":"2016-09-01T02:10:08.000Z","_content":"### FileReader使用\n读取上传图片，返回预览图\n\n监听input[type=\"filt\"]的change事件，使用FileReader接口，readAsDataURL()方法读取图片信息\n\n参考\n- http://www.javascripture.com/FileReader\n- https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsDataURL()\n\nDemo\n- http://jsbin.com/xukinisege/edit?html,js,console,output\n\n```html\n<form action=\"#\">\n  <input type=\"file\" id=\"file-image\">\n</form>\n\n<img src=\"\" alt=\"\" id=\"show-image\" />\n\n<script type=\"text/javascript\">\n  var file_image = document.getElementById('file-image');\n  file_image.addEventListener('change', function() {\n    console.log('listening');\n    var file_reader = new FileReader();\n    file_reader.addEventListener('load', function() {\n      console.log(this.result);\n      var show_image = document.getElementById('show-image');\n      show_image.src = this.result;\n    });\n    file_reader.readAsDataURL(this.files[0]);\n  });\n</script>\n```\n","source":"_posts/FileReader使用.md","raw":"---\ntitle: FileReader使用\ndate: 2016-09-01 10:10:08\ntags:\n---\n### FileReader使用\n读取上传图片，返回预览图\n\n监听input[type=\"filt\"]的change事件，使用FileReader接口，readAsDataURL()方法读取图片信息\n\n参考\n- http://www.javascripture.com/FileReader\n- https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsDataURL()\n\nDemo\n- http://jsbin.com/xukinisege/edit?html,js,console,output\n\n```html\n<form action=\"#\">\n  <input type=\"file\" id=\"file-image\">\n</form>\n\n<img src=\"\" alt=\"\" id=\"show-image\" />\n\n<script type=\"text/javascript\">\n  var file_image = document.getElementById('file-image');\n  file_image.addEventListener('change', function() {\n    console.log('listening');\n    var file_reader = new FileReader();\n    file_reader.addEventListener('load', function() {\n      console.log(this.result);\n      var show_image = document.getElementById('show-image');\n      show_image.src = this.result;\n    });\n    file_reader.readAsDataURL(this.files[0]);\n  });\n</script>\n```\n","slug":"FileReader使用","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeo30000bsafv0lycrlo","content":"<h3 id=\"FileReader使用\"><a href=\"#FileReader使用\" class=\"headerlink\" title=\"FileReader使用\"></a>FileReader使用</h3><p>读取上传图片，返回预览图</p>\n<p>监听input[type=”filt”]的change事件，使用FileReader接口，readAsDataURL()方法读取图片信息</p>\n<p>参考</p>\n<ul>\n<li><a href=\"http://www.javascripture.com/FileReader\" target=\"_blank\" rel=\"external\">http://www.javascripture.com/FileReader</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsDataURL(\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsDataURL(</a>)</li>\n</ul>\n<p>Demo</p>\n<ul>\n<li><a href=\"http://jsbin.com/xukinisege/edit?html,js,console,output\" target=\"_blank\" rel=\"external\">http://jsbin.com/xukinisege/edit?html,js,console,output</a></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"#\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file-image\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"show-image\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">  var file_image = document.getElementById('file-image');</div><div class=\"line\">  file_image.addEventListener('change', function() &#123;</div><div class=\"line\">    console.log('listening');</div><div class=\"line\">    var file_reader = new FileReader();</div><div class=\"line\">    file_reader.addEventListener('load', function() &#123;</div><div class=\"line\">      console.log(this.result);</div><div class=\"line\">      var show_image = document.getElementById('show-image');</div><div class=\"line\">      show_image.src = this.result;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    file_reader.readAsDataURL(this.files[0]);</div><div class=\"line\">  &#125;);</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"FileReader使用\"><a href=\"#FileReader使用\" class=\"headerlink\" title=\"FileReader使用\"></a>FileReader使用</h3><p>读取上传图片，返回预览图</p>\n<p>监听input[type=”filt”]的change事件，使用FileReader接口，readAsDataURL()方法读取图片信息</p>\n<p>参考</p>\n<ul>\n<li><a href=\"http://www.javascripture.com/FileReader\">http://www.javascripture.com/FileReader</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsDataURL(\">https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsDataURL(</a>)</li>\n</ul>\n<p>Demo</p>\n<ul>\n<li><a href=\"http://jsbin.com/xukinisege/edit?html,js,console,output\">http://jsbin.com/xukinisege/edit?html,js,console,output</a></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"#\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file-image\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"show-image\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">  var file_image = document.getElementById('file-image');</div><div class=\"line\">  file_image.addEventListener('change', function() &#123;</div><div class=\"line\">    console.log('listening');</div><div class=\"line\">    var file_reader = new FileReader();</div><div class=\"line\">    file_reader.addEventListener('load', function() &#123;</div><div class=\"line\">      console.log(this.result);</div><div class=\"line\">      var show_image = document.getElementById('show-image');</div><div class=\"line\">      show_image.src = this.result;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    file_reader.readAsDataURL(this.files[0]);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"Ubuntu下安装使用Shadowsocks","date":"2016-07-07T08:08:00.000Z","_content":"### Ubuntu下安装使用Shadowsocks\n\n- ubuntu安装shadowsocks\n``` bash\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n\n- shadowsocks没有菜单栏解决办法\nhttps://bugs.launchpad.net/ubuntu/+source/appmenu-qt5/+bug/1307619\n``` bash\nsudo apt-get remove appmenu-qt5\n\n```\n\n- 安装proxychains-ng\n``` bash\nmkdir -p ~/softwares\ncd ~/softwares\ngit clone git@github.com:rofl0r/proxychains-ng.git\ncd proxychains-ng\n./configure --prefix=/usr --sysconfdir=/etc\nmake clean\nmake\nsudo make install\n```\n\n- 修改proxychains文件\n``` bash\nvim ~/.proxychains-ng/proxychains.conf\n```\n\n- 复制粘贴一下内容\n```bash\nstrict_chain\nproxy_dns\nremote_dns_subnet 224\ntcp_read_time_out 15000\ntcp_connect_time_out 8000\nlocalnet 127.0.0.0/255.0.0.0\nquiet_mode\n\n[ProxyList]\nsocks5  127.0.0.1 1080\n```\n","source":"_posts/Ubuntu下安装使用Shadowsocks.md","raw":"---\ntitle: Ubuntu下安装使用Shadowsocks\ndate: 2016-07-07 16:08:00\ntags:\n---\n### Ubuntu下安装使用Shadowsocks\n\n- ubuntu安装shadowsocks\n``` bash\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n\n- shadowsocks没有菜单栏解决办法\nhttps://bugs.launchpad.net/ubuntu/+source/appmenu-qt5/+bug/1307619\n``` bash\nsudo apt-get remove appmenu-qt5\n\n```\n\n- 安装proxychains-ng\n``` bash\nmkdir -p ~/softwares\ncd ~/softwares\ngit clone git@github.com:rofl0r/proxychains-ng.git\ncd proxychains-ng\n./configure --prefix=/usr --sysconfdir=/etc\nmake clean\nmake\nsudo make install\n```\n\n- 修改proxychains文件\n``` bash\nvim ~/.proxychains-ng/proxychains.conf\n```\n\n- 复制粘贴一下内容\n```bash\nstrict_chain\nproxy_dns\nremote_dns_subnet 224\ntcp_read_time_out 15000\ntcp_connect_time_out 8000\nlocalnet 127.0.0.0/255.0.0.0\nquiet_mode\n\n[ProxyList]\nsocks5  127.0.0.1 1080\n```\n","slug":"Ubuntu下安装使用Shadowsocks","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeo60001bsaf7gjw67fc","content":"<h3 id=\"Ubuntu下安装使用Shadowsocks\"><a href=\"#Ubuntu下安装使用Shadowsocks\" class=\"headerlink\" title=\"Ubuntu下安装使用Shadowsocks\"></a>Ubuntu下安装使用Shadowsocks</h3><ul>\n<li><p>ubuntu安装shadowsocks</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install shadowsocks-qt5</div></pre></td></tr></table></figure>\n</li>\n<li><p>shadowsocks没有菜单栏解决办法<br><a href=\"https://bugs.launchpad.net/ubuntu/+source/appmenu-qt5/+bug/1307619\" target=\"_blank\" rel=\"external\">https://bugs.launchpad.net/ubuntu/+source/appmenu-qt5/+bug/1307619</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get remove appmenu-qt5</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装proxychains-ng</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p ~/softwares</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/softwares</div><div class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:rofl0r/proxychains-ng.git</div><div class=\"line\"><span class=\"built_in\">cd</span> proxychains-ng</div><div class=\"line\">./configure --prefix=/usr --sysconfdir=/etc</div><div class=\"line\">make clean</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改proxychains文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim ~/.proxychains-ng/proxychains.conf</div></pre></td></tr></table></figure>\n</li>\n<li><p>复制粘贴一下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">strict_chain</div><div class=\"line\">proxy_dns</div><div class=\"line\">remote_dns_subnet 224</div><div class=\"line\">tcp_read_time_out 15000</div><div class=\"line\">tcp_connect_time_out 8000</div><div class=\"line\">localnet 127.0.0.0/255.0.0.0</div><div class=\"line\">quiet_mode</div><div class=\"line\"></div><div class=\"line\">[ProxyList]</div><div class=\"line\">socks5  127.0.0.1 1080</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"Ubuntu下安装使用Shadowsocks\"><a href=\"#Ubuntu下安装使用Shadowsocks\" class=\"headerlink\" title=\"Ubuntu下安装使用Shadowsocks\"></a>Ubuntu下安装使用Shadowsocks</h3><ul>\n<li><p>ubuntu安装shadowsocks</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install shadowsocks-qt5</div></pre></td></tr></table></figure>\n</li>\n<li><p>shadowsocks没有菜单栏解决办法<br><a href=\"https://bugs.launchpad.net/ubuntu/+source/appmenu-qt5/+bug/1307619\">https://bugs.launchpad.net/ubuntu/+source/appmenu-qt5/+bug/1307619</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get remove appmenu-qt5</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装proxychains-ng</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p ~/softwares</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/softwares</div><div class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:rofl0r/proxychains-ng.git</div><div class=\"line\"><span class=\"built_in\">cd</span> proxychains-ng</div><div class=\"line\">./configure --prefix=/usr --sysconfdir=/etc</div><div class=\"line\">make clean</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改proxychains文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim ~/.proxychains-ng/proxychains.conf</div></pre></td></tr></table></figure>\n</li>\n<li><p>复制粘贴一下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">strict_chain</div><div class=\"line\">proxy_dns</div><div class=\"line\">remote_dns_subnet 224</div><div class=\"line\">tcp_read_time_out 15000</div><div class=\"line\">tcp_connect_time_out 8000</div><div class=\"line\">localnet 127.0.0.0/255.0.0.0</div><div class=\"line\">quiet_mode</div><div class=\"line\"></div><div class=\"line\">[ProxyList]</div><div class=\"line\">socks5  127.0.0.1 1080</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"ajax上传图片","date":"2016-07-25T06:47:42.000Z","_content":"### ajax上传图片\n接到一个用户反馈的页面，其中要求用户能够上传图片且多图，不使用多图上传的插件情况下思路如下：\n* 监听input[type=\"file\"]的change事件上传图片，图片上传成功后返回图片的转存地址，再生产预览图\n* 用户提交表单反馈时候遍历预览图中的图片转存地址，用','作拼接符（后台要求）\n\n之前没接触过ajax独立上传图片，记录一下方法\n\nDemo：http://jsbin.com/kupaquhalu/edit?html,js,console,output\n\n```html\n<form action=\"#\">\n  <input type=\"file\" id=\"image\">\n  <input type=\"submit\">\n</form>\n```\n\n```javascript\nvar image = document.getElementById('image');\nimage.addEventListener('change', function() {\n  var image_file = this.files[0]; // 获取图片文件对象\n  var image_data = new FormData(); // 新建表单数据\n  image_data.append('image', image_file); // 使用append方法添加字段\n  $.ajax({\n    url: 'api/upload_address',\n    method: 'post',\n    dataType: 'json',\n    cache: false, // 上传文件不需要缓存。\n    processData: false, // 因为data值是FormData对象，不需要对数据做处理。\n    contentType: false, // 因为是由<form>表单构造的FormData对象，且已经声明了属性enctype=\"multipart/form-data\"，所以这里设置为false。\n    data: image_data,\n    success: function(data) {\n      console.log('success');\n      console.log(data);\n    },\n    error: function(data) {\n      console.log('error');\n      console.log(data);\n    }\n  });\n});\n```\n","source":"_posts/ajax上传图片.md","raw":"---\ntitle: ajax上传图片\ndate: 2016-07-25 14:47:42\ntags:\n---\n### ajax上传图片\n接到一个用户反馈的页面，其中要求用户能够上传图片且多图，不使用多图上传的插件情况下思路如下：\n* 监听input[type=\"file\"]的change事件上传图片，图片上传成功后返回图片的转存地址，再生产预览图\n* 用户提交表单反馈时候遍历预览图中的图片转存地址，用','作拼接符（后台要求）\n\n之前没接触过ajax独立上传图片，记录一下方法\n\nDemo：http://jsbin.com/kupaquhalu/edit?html,js,console,output\n\n```html\n<form action=\"#\">\n  <input type=\"file\" id=\"image\">\n  <input type=\"submit\">\n</form>\n```\n\n```javascript\nvar image = document.getElementById('image');\nimage.addEventListener('change', function() {\n  var image_file = this.files[0]; // 获取图片文件对象\n  var image_data = new FormData(); // 新建表单数据\n  image_data.append('image', image_file); // 使用append方法添加字段\n  $.ajax({\n    url: 'api/upload_address',\n    method: 'post',\n    dataType: 'json',\n    cache: false, // 上传文件不需要缓存。\n    processData: false, // 因为data值是FormData对象，不需要对数据做处理。\n    contentType: false, // 因为是由<form>表单构造的FormData对象，且已经声明了属性enctype=\"multipart/form-data\"，所以这里设置为false。\n    data: image_data,\n    success: function(data) {\n      console.log('success');\n      console.log(data);\n    },\n    error: function(data) {\n      console.log('error');\n      console.log(data);\n    }\n  });\n});\n```\n","slug":"ajax上传图片","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeo90002bsafbf3j5oyo","content":"<h3 id=\"ajax上传图片\"><a href=\"#ajax上传图片\" class=\"headerlink\" title=\"ajax上传图片\"></a>ajax上传图片</h3><p>接到一个用户反馈的页面，其中要求用户能够上传图片且多图，不使用多图上传的插件情况下思路如下：</p>\n<ul>\n<li>监听input[type=”file”]的change事件上传图片，图片上传成功后返回图片的转存地址，再生产预览图</li>\n<li>用户提交表单反馈时候遍历预览图中的图片转存地址，用’,’作拼接符（后台要求）</li>\n</ul>\n<p>之前没接触过ajax独立上传图片，记录一下方法</p>\n<p>Demo：<a href=\"http://jsbin.com/kupaquhalu/edit?html,js,console,output\" target=\"_blank\" rel=\"external\">http://jsbin.com/kupaquhalu/edit?html,js,console,output</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"#\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"image\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> image = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'image'</span>);</div><div class=\"line\">image.addEventListener(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> image_file = <span class=\"keyword\">this</span>.files[<span class=\"number\">0</span>]; <span class=\"comment\">// 获取图片文件对象</span></div><div class=\"line\">  <span class=\"keyword\">var</span> image_data = <span class=\"keyword\">new</span> FormData(); <span class=\"comment\">// 新建表单数据</span></div><div class=\"line\">  image_data.append(<span class=\"string\">'image'</span>, image_file); <span class=\"comment\">// 使用append方法添加字段</span></div><div class=\"line\">  $.ajax(&#123;</div><div class=\"line\">    url: <span class=\"string\">'api/upload_address'</span>,</div><div class=\"line\">    method: <span class=\"string\">'post'</span>,</div><div class=\"line\">    dataType: <span class=\"string\">'json'</span>,</div><div class=\"line\">    cache: <span class=\"literal\">false</span>, <span class=\"comment\">// 上传文件不需要缓存。</span></div><div class=\"line\">    processData: <span class=\"literal\">false</span>, <span class=\"comment\">// 因为data值是FormData对象，不需要对数据做处理。</span></div><div class=\"line\">    contentType: <span class=\"literal\">false</span>, <span class=\"comment\">// 因为是由&lt;form&gt;表单构造的FormData对象，且已经声明了属性enctype=\"multipart/form-data\"，所以这里设置为false。</span></div><div class=\"line\">    data: image_data,</div><div class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'success'</span>);</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    error: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'error'</span>);</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"ajax上传图片\"><a href=\"#ajax上传图片\" class=\"headerlink\" title=\"ajax上传图片\"></a>ajax上传图片</h3><p>接到一个用户反馈的页面，其中要求用户能够上传图片且多图，不使用多图上传的插件情况下思路如下：</p>\n<ul>\n<li>监听input[type=”file”]的change事件上传图片，图片上传成功后返回图片的转存地址，再生产预览图</li>\n<li>用户提交表单反馈时候遍历预览图中的图片转存地址，用’,’作拼接符（后台要求）</li>\n</ul>\n<p>之前没接触过ajax独立上传图片，记录一下方法</p>\n<p>Demo：<a href=\"http://jsbin.com/kupaquhalu/edit?html,js,console,output\">http://jsbin.com/kupaquhalu/edit?html,js,console,output</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"#\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"image\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> image = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'image'</span>);</div><div class=\"line\">image.addEventListener(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> image_file = <span class=\"keyword\">this</span>.files[<span class=\"number\">0</span>]; <span class=\"comment\">// 获取图片文件对象</span></div><div class=\"line\">  <span class=\"keyword\">var</span> image_data = <span class=\"keyword\">new</span> FormData(); <span class=\"comment\">// 新建表单数据</span></div><div class=\"line\">  image_data.append(<span class=\"string\">'image'</span>, image_file); <span class=\"comment\">// 使用append方法添加字段</span></div><div class=\"line\">  $.ajax(&#123;</div><div class=\"line\">    url: <span class=\"string\">'api/upload_address'</span>,</div><div class=\"line\">    method: <span class=\"string\">'post'</span>,</div><div class=\"line\">    dataType: <span class=\"string\">'json'</span>,</div><div class=\"line\">    cache: <span class=\"literal\">false</span>, <span class=\"comment\">// 上传文件不需要缓存。</span></div><div class=\"line\">    processData: <span class=\"literal\">false</span>, <span class=\"comment\">// 因为data值是FormData对象，不需要对数据做处理。</span></div><div class=\"line\">    contentType: <span class=\"literal\">false</span>, <span class=\"comment\">// 因为是由&lt;form&gt;表单构造的FormData对象，且已经声明了属性enctype=\"multipart/form-data\"，所以这里设置为false。</span></div><div class=\"line\">    data: image_data,</div><div class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'success'</span>);</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    error: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'error'</span>);</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"git rebase 使用","date":"2016-07-26T07:55:39.000Z","_content":"### git rebase 使用\n使用rebase合并，比merge合并好处在于减少多余的合并记录\n\n参考：https://backlogtool.com/git-guide/tw/stepup/stepup2_8.html\n\n```bash\n#master主分支，dev次分支\n#master分支保持最新版本\ngit pull origin master\n\n#切换到到dev分支\ngit checkout dev\n\n#基于master分支rebase\ngit rebase master\n\n#添加修改文件\ngit add '文件名'\n\n#切换到master分支，并合并dev分支\ngit checkout master\ngit merge dev\n```\n","source":"_posts/git-rebase-使用.md","raw":"---\ntitle: git rebase 使用\ndate: 2016-07-26 15:55:39\ntags:\n---\n### git rebase 使用\n使用rebase合并，比merge合并好处在于减少多余的合并记录\n\n参考：https://backlogtool.com/git-guide/tw/stepup/stepup2_8.html\n\n```bash\n#master主分支，dev次分支\n#master分支保持最新版本\ngit pull origin master\n\n#切换到到dev分支\ngit checkout dev\n\n#基于master分支rebase\ngit rebase master\n\n#添加修改文件\ngit add '文件名'\n\n#切换到master分支，并合并dev分支\ngit checkout master\ngit merge dev\n```\n","slug":"git-rebase-使用","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeob0003bsafe0cgbqic","content":"<h3 id=\"git-rebase-使用\"><a href=\"#git-rebase-使用\" class=\"headerlink\" title=\"git rebase 使用\"></a>git rebase 使用</h3><p>使用rebase合并，比merge合并好处在于减少多余的合并记录</p>\n<p>参考：<a href=\"https://backlogtool.com/git-guide/tw/stepup/stepup2_8.html\" target=\"_blank\" rel=\"external\">https://backlogtool.com/git-guide/tw/stepup/stepup2_8.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#master主分支，dev次分支</span></div><div class=\"line\"><span class=\"comment\">#master分支保持最新版本</span></div><div class=\"line\">git pull origin master</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切换到到dev分支</span></div><div class=\"line\">git checkout dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#基于master分支rebase</span></div><div class=\"line\">git rebase master</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#添加修改文件</span></div><div class=\"line\">git add <span class=\"string\">'文件名'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切换到master分支，并合并dev分支</span></div><div class=\"line\">git checkout master</div><div class=\"line\">git merge dev</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"git-rebase-使用\"><a href=\"#git-rebase-使用\" class=\"headerlink\" title=\"git rebase 使用\"></a>git rebase 使用</h3><p>使用rebase合并，比merge合并好处在于减少多余的合并记录</p>\n<p>参考：<a href=\"https://backlogtool.com/git-guide/tw/stepup/stepup2_8.html\">https://backlogtool.com/git-guide/tw/stepup/stepup2_8.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#master主分支，dev次分支</span></div><div class=\"line\"><span class=\"comment\">#master分支保持最新版本</span></div><div class=\"line\">git pull origin master</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切换到到dev分支</span></div><div class=\"line\">git checkout dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#基于master分支rebase</span></div><div class=\"line\">git rebase master</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#添加修改文件</span></div><div class=\"line\">git add <span class=\"string\">'文件名'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切换到master分支，并合并dev分支</span></div><div class=\"line\">git checkout master</div><div class=\"line\">git merge dev</div></pre></td></tr></table></figure>\n"},{"title":"gulp使用","date":"2016-08-22T07:50:30.000Z","_content":"### gulp使用\n- 配置\n```javascript\n// 'use strict';\n// 引入 gulp\nvar gulp = require('gulp');\n// 引入组件\nvar jshint = require('gulp-jshint'),\n    sass = require('gulp-sass'),\n    minifycss = require('gulp-minify-css'),\n    concat = require('gulp-concat'),\n    uglify = require('gulp-uglify'),\n    rename = require('gulp-rename'),\n    clean = require('gulp-clean'),\n    livereload = require('gulp-livereload'),\n    imagemin = require('gulp-imagemin'),\n    cache = require('gulp-cache'),\n    notify = require('gulp-notify'),\n    plumber = require('gulp-plumber');\n\n// 检查脚本\ngulp.task('lint', function() {\n  gulp.src('./src/scripts/*.js')\n  .pipe(jshint())\n  .pipe(jshint.reporter('default'));\n});\n\n// 编译Sass\ngulp.task('styles', function() {\n  gulp.src('./src/styles/layout.scss')\n  .pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))\n  .pipe(sass())\n  .pipe(gulp.dest('./dist/styles'))\n  .pipe(rename({ suffix: '.min' }))\n  .pipe(minifycss())\n  .pipe(gulp.dest('dist/styles'));\n});\n// 监听sass文件变化\ngulp.task('sass:watch', function () {\n  gulp.watch('./src/styles/layout.scss', ['sass']);\n});\n\n// 合并，压缩文件\ngulp.task('scripts', function() {\n  gulp.src('./src/scripts/**/*.js')\n  .pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))\n  .pipe(concat('all.js'))\n  .pipe(gulp.dest('./dist/scripts'))\n  .pipe(rename('all.min.js'))\n  .pipe(uglify())\n  .pipe(gulp.dest('./dist/scripts'));\n});\n\n// 图片\ngulp.task('images', function() {\n  return gulp.src('./src/images/**/*.{png,jpg,gif,ico}')\n  .pipe(cache(imagemin({\n    optimizationLevel: 3,\n    progressive: true,\n    interlaced: true\n  })))\n  .pipe(gulp.dest('dist/images'));\n});\n\n// 清理\ngulp.task('clean', function() {\n  return gulp.src(['dist/styles', 'dist/scripts', 'dist/images'], {read: false})\n  .pipe(clean());\n});\n\n// 预设任务\ngulp.task('default', ['clean'], function() {\n  gulp.start('styles', 'scripts', 'images');\n});\n\n// 看守\ngulp.task('watch', function() {\n  livereload.listen();// 建立即时重整伺服器\n  gulp.watch('src/styles/**/*.scss', ['styles']);// 看守所有.scss档\n  gulp.watch('src/scripts/**/*.js', ['scripts']);// 看守所有.js档\n  gulp.watch('src/images/**/*.{png,jpg,gif,ico}', ['images']);// 看守所有图片档\n  gulp.watch(['dist/**']).on('change', function(file) {// 看守所有位在 dist/ 目录下的档案，一旦有更动，便进行重整\n    livereload.changed(file.path);\n  });\n});\n```\n","source":"_posts/gulp使用.md","raw":"---\ntitle: gulp使用\ndate: 2016-08-22 15:50:30\ntags:\n---\n### gulp使用\n- 配置\n```javascript\n// 'use strict';\n// 引入 gulp\nvar gulp = require('gulp');\n// 引入组件\nvar jshint = require('gulp-jshint'),\n    sass = require('gulp-sass'),\n    minifycss = require('gulp-minify-css'),\n    concat = require('gulp-concat'),\n    uglify = require('gulp-uglify'),\n    rename = require('gulp-rename'),\n    clean = require('gulp-clean'),\n    livereload = require('gulp-livereload'),\n    imagemin = require('gulp-imagemin'),\n    cache = require('gulp-cache'),\n    notify = require('gulp-notify'),\n    plumber = require('gulp-plumber');\n\n// 检查脚本\ngulp.task('lint', function() {\n  gulp.src('./src/scripts/*.js')\n  .pipe(jshint())\n  .pipe(jshint.reporter('default'));\n});\n\n// 编译Sass\ngulp.task('styles', function() {\n  gulp.src('./src/styles/layout.scss')\n  .pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))\n  .pipe(sass())\n  .pipe(gulp.dest('./dist/styles'))\n  .pipe(rename({ suffix: '.min' }))\n  .pipe(minifycss())\n  .pipe(gulp.dest('dist/styles'));\n});\n// 监听sass文件变化\ngulp.task('sass:watch', function () {\n  gulp.watch('./src/styles/layout.scss', ['sass']);\n});\n\n// 合并，压缩文件\ngulp.task('scripts', function() {\n  gulp.src('./src/scripts/**/*.js')\n  .pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))\n  .pipe(concat('all.js'))\n  .pipe(gulp.dest('./dist/scripts'))\n  .pipe(rename('all.min.js'))\n  .pipe(uglify())\n  .pipe(gulp.dest('./dist/scripts'));\n});\n\n// 图片\ngulp.task('images', function() {\n  return gulp.src('./src/images/**/*.{png,jpg,gif,ico}')\n  .pipe(cache(imagemin({\n    optimizationLevel: 3,\n    progressive: true,\n    interlaced: true\n  })))\n  .pipe(gulp.dest('dist/images'));\n});\n\n// 清理\ngulp.task('clean', function() {\n  return gulp.src(['dist/styles', 'dist/scripts', 'dist/images'], {read: false})\n  .pipe(clean());\n});\n\n// 预设任务\ngulp.task('default', ['clean'], function() {\n  gulp.start('styles', 'scripts', 'images');\n});\n\n// 看守\ngulp.task('watch', function() {\n  livereload.listen();// 建立即时重整伺服器\n  gulp.watch('src/styles/**/*.scss', ['styles']);// 看守所有.scss档\n  gulp.watch('src/scripts/**/*.js', ['scripts']);// 看守所有.js档\n  gulp.watch('src/images/**/*.{png,jpg,gif,ico}', ['images']);// 看守所有图片档\n  gulp.watch(['dist/**']).on('change', function(file) {// 看守所有位在 dist/ 目录下的档案，一旦有更动，便进行重整\n    livereload.changed(file.path);\n  });\n});\n```\n","slug":"gulp使用","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeob0004bsafyjrg8eck","content":"<h3 id=\"gulp使用\"><a href=\"#gulp使用\" class=\"headerlink\" title=\"gulp使用\"></a>gulp使用</h3><ul>\n<li>配置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 'use strict';</span></div><div class=\"line\"><span class=\"comment\">// 引入 gulp</span></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"comment\">// 引入组件</span></div><div class=\"line\"><span class=\"keyword\">var</span> jshint = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-jshint'</span>),</div><div class=\"line\">    sass = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sass'</span>),</div><div class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>),</div><div class=\"line\">    concat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-concat'</span>),</div><div class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>),</div><div class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>),</div><div class=\"line\">    clean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean'</span>),</div><div class=\"line\">    livereload = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-livereload'</span>),</div><div class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>),</div><div class=\"line\">    cache = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-cache'</span>),</div><div class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-notify'</span>),</div><div class=\"line\">    plumber = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-plumber'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 检查脚本</span></div><div class=\"line\">gulp.task(<span class=\"string\">'lint'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'./src/scripts/*.js'</span>)</div><div class=\"line\">  .pipe(jshint())</div><div class=\"line\">  .pipe(jshint.reporter(<span class=\"string\">'default'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 编译Sass</span></div><div class=\"line\">gulp.task(<span class=\"string\">'styles'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'./src/styles/layout.scss'</span>)</div><div class=\"line\">  .pipe(plumber(&#123;errorHandler: notify.onError(<span class=\"string\">'Error: &lt;%= error.message %&gt;'</span>)&#125;))</div><div class=\"line\">  .pipe(sass())</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./dist/styles'</span>))</div><div class=\"line\">  .pipe(rename(&#123; suffix: <span class=\"string\">'.min'</span> &#125;))</div><div class=\"line\">  .pipe(minifycss())</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'dist/styles'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 监听sass文件变化</span></div><div class=\"line\">gulp.task(<span class=\"string\">'sass:watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.watch(<span class=\"string\">'./src/styles/layout.scss'</span>, [<span class=\"string\">'sass'</span>]);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 合并，压缩文件</span></div><div class=\"line\">gulp.task(<span class=\"string\">'scripts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'./src/scripts/**/*.js'</span>)</div><div class=\"line\">  .pipe(plumber(&#123;errorHandler: notify.onError(<span class=\"string\">'Error: &lt;%= error.message %&gt;'</span>)&#125;))</div><div class=\"line\">  .pipe(concat(<span class=\"string\">'all.js'</span>))</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./dist/scripts'</span>))</div><div class=\"line\">  .pipe(rename(<span class=\"string\">'all.min.js'</span>))</div><div class=\"line\">  .pipe(uglify())</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./dist/scripts'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 图片</span></div><div class=\"line\">gulp.task(<span class=\"string\">'images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./src/images/**/*.&#123;png,jpg,gif,ico&#125;'</span>)</div><div class=\"line\">  .pipe(cache(imagemin(&#123;</div><div class=\"line\">    optimizationLevel: <span class=\"number\">3</span>,</div><div class=\"line\">    progressive: <span class=\"literal\">true</span>,</div><div class=\"line\">    interlaced: <span class=\"literal\">true</span></div><div class=\"line\">  &#125;)))</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'dist/images'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 清理</span></div><div class=\"line\">gulp.task(<span class=\"string\">'clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'dist/styles'</span>, <span class=\"string\">'dist/scripts'</span>, <span class=\"string\">'dist/images'</span>], &#123;read: <span class=\"literal\">false</span>&#125;)</div><div class=\"line\">  .pipe(clean());</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 预设任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'clean'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.start(<span class=\"string\">'styles'</span>, <span class=\"string\">'scripts'</span>, <span class=\"string\">'images'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 看守</span></div><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  livereload.listen();<span class=\"comment\">// 建立即时重整伺服器</span></div><div class=\"line\">  gulp.watch(<span class=\"string\">'src/styles/**/*.scss'</span>, [<span class=\"string\">'styles'</span>]);<span class=\"comment\">// 看守所有.scss档</span></div><div class=\"line\">  gulp.watch(<span class=\"string\">'src/scripts/**/*.js'</span>, [<span class=\"string\">'scripts'</span>]);<span class=\"comment\">// 看守所有.js档</span></div><div class=\"line\">  gulp.watch(<span class=\"string\">'src/images/**/*.&#123;png,jpg,gif,ico&#125;'</span>, [<span class=\"string\">'images'</span>]);<span class=\"comment\">// 看守所有图片档</span></div><div class=\"line\">  gulp.watch([<span class=\"string\">'dist/**'</span>]).on(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>) </span>&#123;<span class=\"comment\">// 看守所有位在 dist/ 目录下的档案，一旦有更动，便进行重整</span></div><div class=\"line\">    livereload.changed(file.path);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"gulp使用\"><a href=\"#gulp使用\" class=\"headerlink\" title=\"gulp使用\"></a>gulp使用</h3><ul>\n<li>配置<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 'use strict';</span></div><div class=\"line\"><span class=\"comment\">// 引入 gulp</span></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"comment\">// 引入组件</span></div><div class=\"line\"><span class=\"keyword\">var</span> jshint = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-jshint'</span>),</div><div class=\"line\">    sass = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sass'</span>),</div><div class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>),</div><div class=\"line\">    concat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-concat'</span>),</div><div class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>),</div><div class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>),</div><div class=\"line\">    clean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean'</span>),</div><div class=\"line\">    livereload = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-livereload'</span>),</div><div class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>),</div><div class=\"line\">    cache = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-cache'</span>),</div><div class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-notify'</span>),</div><div class=\"line\">    plumber = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-plumber'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 检查脚本</span></div><div class=\"line\">gulp.task(<span class=\"string\">'lint'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'./src/scripts/*.js'</span>)</div><div class=\"line\">  .pipe(jshint())</div><div class=\"line\">  .pipe(jshint.reporter(<span class=\"string\">'default'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 编译Sass</span></div><div class=\"line\">gulp.task(<span class=\"string\">'styles'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'./src/styles/layout.scss'</span>)</div><div class=\"line\">  .pipe(plumber(&#123;errorHandler: notify.onError(<span class=\"string\">'Error: &lt;%= error.message %&gt;'</span>)&#125;))</div><div class=\"line\">  .pipe(sass())</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./dist/styles'</span>))</div><div class=\"line\">  .pipe(rename(&#123; suffix: <span class=\"string\">'.min'</span> &#125;))</div><div class=\"line\">  .pipe(minifycss())</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'dist/styles'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 监听sass文件变化</span></div><div class=\"line\">gulp.task(<span class=\"string\">'sass:watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.watch(<span class=\"string\">'./src/styles/layout.scss'</span>, [<span class=\"string\">'sass'</span>]);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 合并，压缩文件</span></div><div class=\"line\">gulp.task(<span class=\"string\">'scripts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">'./src/scripts/**/*.js'</span>)</div><div class=\"line\">  .pipe(plumber(&#123;errorHandler: notify.onError(<span class=\"string\">'Error: &lt;%= error.message %&gt;'</span>)&#125;))</div><div class=\"line\">  .pipe(concat(<span class=\"string\">'all.js'</span>))</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./dist/scripts'</span>))</div><div class=\"line\">  .pipe(rename(<span class=\"string\">'all.min.js'</span>))</div><div class=\"line\">  .pipe(uglify())</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./dist/scripts'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 图片</span></div><div class=\"line\">gulp.task(<span class=\"string\">'images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./src/images/**/*.&#123;png,jpg,gif,ico&#125;'</span>)</div><div class=\"line\">  .pipe(cache(imagemin(&#123;</div><div class=\"line\">    optimizationLevel: <span class=\"number\">3</span>,</div><div class=\"line\">    progressive: <span class=\"literal\">true</span>,</div><div class=\"line\">    interlaced: <span class=\"literal\">true</span></div><div class=\"line\">  &#125;)))</div><div class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'dist/images'</span>));</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 清理</span></div><div class=\"line\">gulp.task(<span class=\"string\">'clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'dist/styles'</span>, <span class=\"string\">'dist/scripts'</span>, <span class=\"string\">'dist/images'</span>], &#123;read: <span class=\"literal\">false</span>&#125;)</div><div class=\"line\">  .pipe(clean());</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 预设任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'clean'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  gulp.start(<span class=\"string\">'styles'</span>, <span class=\"string\">'scripts'</span>, <span class=\"string\">'images'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 看守</span></div><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  livereload.listen();<span class=\"comment\">// 建立即时重整伺服器</span></div><div class=\"line\">  gulp.watch(<span class=\"string\">'src/styles/**/*.scss'</span>, [<span class=\"string\">'styles'</span>]);<span class=\"comment\">// 看守所有.scss档</span></div><div class=\"line\">  gulp.watch(<span class=\"string\">'src/scripts/**/*.js'</span>, [<span class=\"string\">'scripts'</span>]);<span class=\"comment\">// 看守所有.js档</span></div><div class=\"line\">  gulp.watch(<span class=\"string\">'src/images/**/*.&#123;png,jpg,gif,ico&#125;'</span>, [<span class=\"string\">'images'</span>]);<span class=\"comment\">// 看守所有图片档</span></div><div class=\"line\">  gulp.watch([<span class=\"string\">'dist/**'</span>]).on(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>) </span>&#123;<span class=\"comment\">// 看守所有位在 dist/ 目录下的档案，一旦有更动，便进行重整</span></div><div class=\"line\">    livereload.changed(file.path);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"hexo使用","date":"2016-06-29T02:43:07.000Z","_content":"### Hexo使用\n- 注意hexo项目需要2个分支(master,hexo)  \n先在github新建一个xxx.github.io的项目，开启github page功能，git拉取项目一个存放hexo生成的页面资源，另一个存放hexo源文件以便在其他电脑写文章,血的教训\n\n- 工具git，node  \n```bash\n#git\nsudo apt-get install git\n#使用\nssh-keygen -t rsa -b 4096 -C 邮箱\ngit config --global user.email 邮箱\ngit config --global user.name 名字\n#找key文件，添加到github\ncd ~/.ssh\n\n#node\ncurl https://raw.github.com/creationix/nvm/master/install.sh | sh\n或\nwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\nnvm install 4\n```\n\n- 使用\n```bash\n#全局安装hexo\nnpm install hexo -g\n\n#拉取仓库\ngit clone 仓库地址\n\n#切换仓库目录\ncd 仓库目录名\n\n#hexo初始化\nhexo init\n\n#git初始化，因为hexo init初始化会使git失效，需要重新关联仓库\ngit init\ngit remote add orign 仓库地址\n\n#安装依赖\nnpm install\n\n#安装一个插件，以便部署到github\nnpm install hexo-deployer-git --save\n\n#先切换保存hexo源文件的分支提交源文件，以便日后在其他电脑上写文章\ngit checkout hexo\ngit add .\ngit commit -m '提交hexo源文件'\ngit push origin hexo\n\n#切回master分支，可以开始写文章\ngit checkout master\nhexo new 文章名\n\n#生成静态资源，查看效果，提交文章\nhexo generate\nhexo server\nhexo deploy #需要安装hexo-deployer-git\n```\n","source":"_posts/hexo使用.md","raw":"---\ntitle: hexo使用\ndate: 2016-06-29 10:43:07\ntags:\n---\n### Hexo使用\n- 注意hexo项目需要2个分支(master,hexo)  \n先在github新建一个xxx.github.io的项目，开启github page功能，git拉取项目一个存放hexo生成的页面资源，另一个存放hexo源文件以便在其他电脑写文章,血的教训\n\n- 工具git，node  \n```bash\n#git\nsudo apt-get install git\n#使用\nssh-keygen -t rsa -b 4096 -C 邮箱\ngit config --global user.email 邮箱\ngit config --global user.name 名字\n#找key文件，添加到github\ncd ~/.ssh\n\n#node\ncurl https://raw.github.com/creationix/nvm/master/install.sh | sh\n或\nwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\nnvm install 4\n```\n\n- 使用\n```bash\n#全局安装hexo\nnpm install hexo -g\n\n#拉取仓库\ngit clone 仓库地址\n\n#切换仓库目录\ncd 仓库目录名\n\n#hexo初始化\nhexo init\n\n#git初始化，因为hexo init初始化会使git失效，需要重新关联仓库\ngit init\ngit remote add orign 仓库地址\n\n#安装依赖\nnpm install\n\n#安装一个插件，以便部署到github\nnpm install hexo-deployer-git --save\n\n#先切换保存hexo源文件的分支提交源文件，以便日后在其他电脑上写文章\ngit checkout hexo\ngit add .\ngit commit -m '提交hexo源文件'\ngit push origin hexo\n\n#切回master分支，可以开始写文章\ngit checkout master\nhexo new 文章名\n\n#生成静态资源，查看效果，提交文章\nhexo generate\nhexo server\nhexo deploy #需要安装hexo-deployer-git\n```\n","slug":"hexo使用","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeod0005bsafiflr4pcy","content":"<h3 id=\"Hexo使用\"><a href=\"#Hexo使用\" class=\"headerlink\" title=\"Hexo使用\"></a>Hexo使用</h3><ul>\n<li><p>注意hexo项目需要2个分支(master,hexo)<br>先在github新建一个xxx.github.io的项目，开启github page功能，git拉取项目一个存放hexo生成的页面资源，另一个存放hexo源文件以便在其他电脑写文章,血的教训</p>\n</li>\n<li><p>工具git，node  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#git</span></div><div class=\"line\">sudo apt-get install git</div><div class=\"line\"><span class=\"comment\">#使用</span></div><div class=\"line\">ssh-keygen -t rsa -b 4096 -C 邮箱</div><div class=\"line\">git config --global user.email 邮箱</div><div class=\"line\">git config --global user.name 名字</div><div class=\"line\"><span class=\"comment\">#找key文件，添加到github</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#node</span></div><div class=\"line\">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class=\"line\">或</div><div class=\"line\">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class=\"line\">nvm install 4</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#全局安装hexo</span></div><div class=\"line\">npm install hexo -g</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#拉取仓库</span></div><div class=\"line\">git <span class=\"built_in\">clone</span> 仓库地址</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切换仓库目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span> 仓库目录名</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#hexo初始化</span></div><div class=\"line\">hexo init</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#git初始化，因为hexo init初始化会使git失效，需要重新关联仓库</span></div><div class=\"line\">git init</div><div class=\"line\">git remote add orign 仓库地址</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装依赖</span></div><div class=\"line\">npm install</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装一个插件，以便部署到github</span></div><div class=\"line\">npm install hexo-deployer-git --save</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#先切换保存hexo源文件的分支提交源文件，以便日后在其他电脑上写文章</span></div><div class=\"line\">git checkout hexo</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">'提交hexo源文件'</span></div><div class=\"line\">git push origin hexo</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切回master分支，可以开始写文章</span></div><div class=\"line\">git checkout master</div><div class=\"line\">hexo new 文章名</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#生成静态资源，查看效果，提交文章</span></div><div class=\"line\">hexo generate</div><div class=\"line\">hexo server</div><div class=\"line\">hexo deploy <span class=\"comment\">#需要安装hexo-deployer-git</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"Hexo使用\"><a href=\"#Hexo使用\" class=\"headerlink\" title=\"Hexo使用\"></a>Hexo使用</h3><ul>\n<li><p>注意hexo项目需要2个分支(master,hexo)<br>先在github新建一个xxx.github.io的项目，开启github page功能，git拉取项目一个存放hexo生成的页面资源，另一个存放hexo源文件以便在其他电脑写文章,血的教训</p>\n</li>\n<li><p>工具git，node  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#git</span></div><div class=\"line\">sudo apt-get install git</div><div class=\"line\"><span class=\"comment\">#使用</span></div><div class=\"line\">ssh-keygen -t rsa -b 4096 -C 邮箱</div><div class=\"line\">git config --global user.email 邮箱</div><div class=\"line\">git config --global user.name 名字</div><div class=\"line\"><span class=\"comment\">#找key文件，添加到github</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#node</span></div><div class=\"line\">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class=\"line\">或</div><div class=\"line\">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class=\"line\">nvm install 4</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#全局安装hexo</span></div><div class=\"line\">npm install hexo -g</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#拉取仓库</span></div><div class=\"line\">git <span class=\"built_in\">clone</span> 仓库地址</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切换仓库目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span> 仓库目录名</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#hexo初始化</span></div><div class=\"line\">hexo init</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#git初始化，因为hexo init初始化会使git失效，需要重新关联仓库</span></div><div class=\"line\">git init</div><div class=\"line\">git remote add orign 仓库地址</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装依赖</span></div><div class=\"line\">npm install</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#安装一个插件，以便部署到github</span></div><div class=\"line\">npm install hexo-deployer-git --save</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#先切换保存hexo源文件的分支提交源文件，以便日后在其他电脑上写文章</span></div><div class=\"line\">git checkout hexo</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">'提交hexo源文件'</span></div><div class=\"line\">git push origin hexo</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#切回master分支，可以开始写文章</span></div><div class=\"line\">git checkout master</div><div class=\"line\">hexo new 文章名</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#生成静态资源，查看效果，提交文章</span></div><div class=\"line\">hexo generate</div><div class=\"line\">hexo server</div><div class=\"line\">hexo deploy <span class=\"comment\">#需要安装hexo-deployer-git</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"localStorage使用","date":"2016-09-01T10:19:28.000Z","_content":"### localStorage使用\n\n使用localStorage储存数据，储存的数据是字符串string，需要把字符串转换成json数据方便读取\n\n参考\n- https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#JSON.stringify用作_JavaScript\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head>\n<body>\n  <h3>localStorage使用</h3>\n  <div class=\"list\">\n    <div class=\"value value\" data-id=\"1\">黑名单</div>\n    <div class=\"value value\" data-id=\"2\">怪奇物语</div>\n    <div class=\"value value\" data-id=\"3\">行尸走肉</div>\n  </div>\n\n  <a href=\"javascript:;\" id=\"clean\">清除localStorage数据</a>\n\n  <style>\n    .list {\n      border: 1px solid skyblue;\n      padding: 0 10px;\n    }\n    .value {\n      border: 1px solid tomato;\n      margin: 20px 0;\n      background-color: tomato;\n    }\n  </style>\n\n  <script>\n    document.getElementById('clean').addEventListener('click', function() {\n      console.log('清除localStorage数据');\n      localStorage.clear(); //清除localStroage\n    });\n\n    var value = document.getElementsByClassName('value');\n    var movies = {\n      movie: []\n    };\n\n    for(var i = 0; i < value.length; i++) {\n      value[i].addEventListener('click', function() {\n        console.log(this.dataset['id']);\n        console.log(this.innerHTML);\n        movies.movie.push({\n          id: this.dataset['id'],\n          name: this.innerHTML\n        })\n        localStorage.setItem('movies', JSON.stringify(movies));// 使用JSON.stringify()字符串化数据\n      })\n    }\n\n    console.log(localStorage);// 原始localStroage数据\n    console.log('----');\n    console.log(JSON.parse(localStorage.getItem('movies')));// 使用JSON.parse()解析成json数据\n\n  </script>\n\n</body>\n</html>\n\n```\n","source":"_posts/localStorage使用.md","raw":"---\ntitle: localStorage使用\ndate: 2016-09-01 18:19:28\ntags:\n---\n### localStorage使用\n\n使用localStorage储存数据，储存的数据是字符串string，需要把字符串转换成json数据方便读取\n\n参考\n- https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#JSON.stringify用作_JavaScript\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head>\n<body>\n  <h3>localStorage使用</h3>\n  <div class=\"list\">\n    <div class=\"value value\" data-id=\"1\">黑名单</div>\n    <div class=\"value value\" data-id=\"2\">怪奇物语</div>\n    <div class=\"value value\" data-id=\"3\">行尸走肉</div>\n  </div>\n\n  <a href=\"javascript:;\" id=\"clean\">清除localStorage数据</a>\n\n  <style>\n    .list {\n      border: 1px solid skyblue;\n      padding: 0 10px;\n    }\n    .value {\n      border: 1px solid tomato;\n      margin: 20px 0;\n      background-color: tomato;\n    }\n  </style>\n\n  <script>\n    document.getElementById('clean').addEventListener('click', function() {\n      console.log('清除localStorage数据');\n      localStorage.clear(); //清除localStroage\n    });\n\n    var value = document.getElementsByClassName('value');\n    var movies = {\n      movie: []\n    };\n\n    for(var i = 0; i < value.length; i++) {\n      value[i].addEventListener('click', function() {\n        console.log(this.dataset['id']);\n        console.log(this.innerHTML);\n        movies.movie.push({\n          id: this.dataset['id'],\n          name: this.innerHTML\n        })\n        localStorage.setItem('movies', JSON.stringify(movies));// 使用JSON.stringify()字符串化数据\n      })\n    }\n\n    console.log(localStorage);// 原始localStroage数据\n    console.log('----');\n    console.log(JSON.parse(localStorage.getItem('movies')));// 使用JSON.parse()解析成json数据\n\n  </script>\n\n</body>\n</html>\n\n```\n","slug":"localStorage使用","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeog0006bsaf8faa7pwi","content":"<h3 id=\"localStorage使用\"><a href=\"#localStorage使用\" class=\"headerlink\" title=\"localStorage使用\"></a>localStorage使用</h3><p>使用localStorage储存数据，储存的数据是字符串string，需要把字符串转换成json数据方便读取</p>\n<p>参考</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#JSON.stringify用作_JavaScript\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#JSON.stringify用作_JavaScript</a></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>localStorage使用<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"value value\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"1\"</span>&gt;</span>黑名单<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"value value\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"2\"</span>&gt;</span>怪奇物语<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"value value\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"3\"</span>&gt;</span>行尸走肉<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clean\"</span>&gt;</span>清除localStorage数据<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">    .list &#123;</div><div class=\"line\">      border: 1px solid skyblue;</div><div class=\"line\">      padding: 0 10px;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .value &#123;</div><div class=\"line\">      border: 1px solid tomato;</div><div class=\"line\">      margin: 20px 0;</div><div class=\"line\">      background-color: tomato;</div><div class=\"line\">    &#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'clean'</span>).addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'清除localStorage数据'</span>);</div><div class=\"line\">      localStorage.clear(); <span class=\"comment\">//清除localStroage</span></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'value'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> movies = &#123;</div><div class=\"line\">      movie: []</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; value.length; i++) &#123;</div><div class=\"line\">      value[i].addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.dataset[<span class=\"string\">'id'</span>]);</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.innerHTML);</div><div class=\"line\">        movies.movie.push(&#123;</div><div class=\"line\">          id: <span class=\"keyword\">this</span>.dataset[<span class=\"string\">'id'</span>],</div><div class=\"line\">          name: <span class=\"keyword\">this</span>.innerHTML</div><div class=\"line\">        &#125;)</div><div class=\"line\">        localStorage.setItem(<span class=\"string\">'movies'</span>, <span class=\"built_in\">JSON</span>.stringify(movies));<span class=\"comment\">// 使用JSON.stringify()字符串化数据</span></div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(localStorage);<span class=\"comment\">// 原始localStroage数据</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'----'</span>);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">'movies'</span>)));<span class=\"comment\">// 使用JSON.parse()解析成json数据</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"localStorage使用\"><a href=\"#localStorage使用\" class=\"headerlink\" title=\"localStorage使用\"></a>localStorage使用</h3><p>使用localStorage储存数据，储存的数据是字符串string，需要把字符串转换成json数据方便读取</p>\n<p>参考</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#JSON.stringify用作_JavaScript\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#JSON.stringify用作_JavaScript</a></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>localStorage使用<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"value value\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"1\"</span>&gt;</span>黑名单<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"value value\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"2\"</span>&gt;</span>怪奇物语<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"value value\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"3\"</span>&gt;</span>行尸走肉<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clean\"</span>&gt;</span>清除localStorage数据<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">    .list &#123;</div><div class=\"line\">      border: 1px solid skyblue;</div><div class=\"line\">      padding: 0 10px;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .value &#123;</div><div class=\"line\">      border: 1px solid tomato;</div><div class=\"line\">      margin: 20px 0;</div><div class=\"line\">      background-color: tomato;</div><div class=\"line\">    &#125;</div><div class=\"line\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'clean'</span>).addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'清除localStorage数据'</span>);</div><div class=\"line\">      localStorage.clear(); <span class=\"comment\">//清除localStroage</span></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'value'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> movies = &#123;</div><div class=\"line\">      movie: []</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; value.length; i++) &#123;</div><div class=\"line\">      value[i].addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.dataset[<span class=\"string\">'id'</span>]);</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.innerHTML);</div><div class=\"line\">        movies.movie.push(&#123;</div><div class=\"line\">          id: <span class=\"keyword\">this</span>.dataset[<span class=\"string\">'id'</span>],</div><div class=\"line\">          name: <span class=\"keyword\">this</span>.innerHTML</div><div class=\"line\">        &#125;)</div><div class=\"line\">        localStorage.setItem(<span class=\"string\">'movies'</span>, <span class=\"built_in\">JSON</span>.stringify(movies));<span class=\"comment\">// 使用JSON.stringify()字符串化数据</span></div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(localStorage);<span class=\"comment\">// 原始localStroage数据</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'----'</span>);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">'movies'</span>)));<span class=\"comment\">// 使用JSON.parse()解析成json数据</span></div><div class=\"line\"></div><div class=\"line\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"sass常用模块","date":"2016-07-26T08:08:03.000Z","_content":"### sass常用模块\n图片适配retina屏幕\n```sass\n@mixin image_2x($image, $type) {\n  background-image: url($image + \".\" + $type);\n  @media (min--moz-device-pixel-ratio: 1.3),\n  (-o-min-device-pixel-ratio: 2.6/2),\n  (-webkit-min-device-pixel-ratio: 1.3),\n  (min-device-pixel-ratio: 1.3),\n  (min-resolution: 1.3dppx) {\n    /* on retina, use image that's scaled by 2 */\n    background-image: url($image + \"@2x.\" + $type);\n  }\n}\n```\n","source":"_posts/sass常用模块.md","raw":"---\ntitle: sass常用模块\ndate: 2016-07-26 16:08:03\ntags:\n---\n### sass常用模块\n图片适配retina屏幕\n```sass\n@mixin image_2x($image, $type) {\n  background-image: url($image + \".\" + $type);\n  @media (min--moz-device-pixel-ratio: 1.3),\n  (-o-min-device-pixel-ratio: 2.6/2),\n  (-webkit-min-device-pixel-ratio: 1.3),\n  (min-device-pixel-ratio: 1.3),\n  (min-resolution: 1.3dppx) {\n    /* on retina, use image that's scaled by 2 */\n    background-image: url($image + \"@2x.\" + $type);\n  }\n}\n```\n","slug":"sass常用模块","published":1,"updated":"2016-09-02T03:46:23.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisl7yeoh0007bsafzs60u5yu","content":"<h3 id=\"sass常用模块\"><a href=\"#sass常用模块\" class=\"headerlink\" title=\"sass常用模块\"></a>sass常用模块</h3><p>图片适配retina屏幕<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin image_2x($image, $type) &#123;</div><div class=\"line\">  background-image: url($image + &quot;.&quot; + $type);</div><div class=\"line\">  @media (min--moz-device-pixel-ratio: 1.3),</div><div class=\"line\">  (-o-min-device-pixel-ratio: 2.6/2),</div><div class=\"line\">  (-webkit-min-device-pixel-ratio: 1.3),</div><div class=\"line\">  (min-device-pixel-ratio: 1.3),</div><div class=\"line\">  (min-resolution: 1.3dppx) &#123;</div><div class=\"line\">    /* on retina, use image that&apos;s scaled by 2 */</div><div class=\"line\">    background-image: url($image + &quot;@2x.&quot; + $type);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h3 id=\"sass常用模块\"><a href=\"#sass常用模块\" class=\"headerlink\" title=\"sass常用模块\"></a>sass常用模块</h3><p>图片适配retina屏幕<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin image_2x($image, $type) &#123;</div><div class=\"line\">  background-image: url($image + &quot;.&quot; + $type);</div><div class=\"line\">  @media (min--moz-device-pixel-ratio: 1.3),</div><div class=\"line\">  (-o-min-device-pixel-ratio: 2.6/2),</div><div class=\"line\">  (-webkit-min-device-pixel-ratio: 1.3),</div><div class=\"line\">  (min-device-pixel-ratio: 1.3),</div><div class=\"line\">  (min-resolution: 1.3dppx) &#123;</div><div class=\"line\">    /* on retina, use image that&apos;s scaled by 2 */</div><div class=\"line\">    background-image: url($image + &quot;@2x.&quot; + $type);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}